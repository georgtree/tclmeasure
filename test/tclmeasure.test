package require tcltest
namespace import ::tcltest::*
package require gnuplotutil
namespace import ::gnuplotutil::*
package require tclmeasure
namespace import ::tclmeasure::*
package require math::constants
::math::constants::constants radtodeg degtorad pi

for {set i 0} {$i<=1000} {incr i} {
    set xi [= {$i*0.05}]
    lappend x $xi
    lappend y1 [= {sin($xi)}]
    lappend y2 [= {cos($xi)}]
}

for {set i -500} {$i<=500} {incr i} {
    set xi [= {$i*0.05}]
    lappend xsym $xi
    lappend y1sym [= {sin($xi)}]
    lappend y2sym [= {cos($xi)}]
}
#plotXYN $x -columns $y1 $y2
### TrigTarg tests
test TrigTargTest-1 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -trig {-vec y1 -val 0.1 -rise 3}\
                  -targ {-vec y2 -val 0.5 -fall 5}]
} -result {xtrig 12.666567432668222 xtarg 26.17976390163929 xdelta 13.513196468971069}

test TrigTargTest-2 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -trig {-vec y1 -val 0.7 -rise 2}\
                  -targ {-at 20.0}]
} -result {xtrig 7.058761869929844 xtarg 20.0 xdelta 12.941238130070156}

test TrigTargTest-3 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -trig {-at 5.01}\
                    -targ {-vec y2 -val 0.5 -cross 2}]
} -result {xtrig 5.01 xtarg 5.236130584737532 xdelta 0.22613058473753256}

test TrigTargTest-4 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -trig {-vec x -val 5.01 -rise 1}\
                  -targ {-vec y2 -val 0.5 -fall last}]
} -result {xtrig 5.01 xtarg 45.029318738629485 xdelta 40.01931873862949}

test TrigTargTest-5 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -trig {-vec y1 -val 0.1 -rise last}\
                  -targ {-vec y2 -val 0.5 -fall last}]
} -result {xtrig 44.08249174375871 xtarg 45.029318738629485 xdelta 0.9468269948707757}

test TrigTargTest-6 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -trig {-vec y1 -val 0.1 -rise last}\
                   -targ {-vec y2 -val 2.0 -fall last}} errorStr
    return $errorStr
} -result {Targ value '2.000000' with conditions 'fall last delay=0.000000' was not found}

test TrigTargTest-7 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -trig {-vec y1 -val 0.1 -rise last}\
                   -targ {-vec y2 -val -0.1 -fall 20}} errorStr
    return $errorStr
} -result {Targ value '-0.100000' with conditions 'fall 20 delay=0.000000' was not found}

### FindWhen tests
test FindWhenTest-1 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -when {-vec y2 -val 0.5 -fall 5}]
} -result 0.8656776653169641

test FindWhenTest-2 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1\
                    -when {-vec y2 -val 0.5 -fall all}]
} -result {0.8659480349968515 0.865680229712564 0.8657418826412921 0.8659366421684264 0.8656776653169641\
                   0.8657478888140752 0.8659254860082891 0.8656753304879521}

test FindWhenTest-3 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec y2 -val 0.5 -fall 5}]
} -result 26.17976390163929

test FindWhenTest-4 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec y2 -val 0.5 -fall all}]
} -result {1.0471578743251442 7.330209181364409 13.613428264764178 19.896707975918524 26.17976390163929\
                   32.46298722138866 38.74625820457005 45.029318738629485}

test FindWhenTest-5 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -when {-vec1 y1 -vec2 y2 -fall 5}]
} -result -0.706968221057803

test FindWhenTest-6 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1\
                    -when {-vec1 y1 -vec2 y2 -fall all}]
} -result {-0.7068872226471654 -0.7069634970616326 -0.7070049990743651 -0.7068866674037738 -0.706968221057803\
                   -0.7069993033256949 -0.7068862515631232 -0.7069730845371476}

test FindWhenTest-7 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec1 y1 -vec2 y2 -fall 5}]
} -result 29.059734040425376

test FindWhenTest-8 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec1 y1 -vec2 y2 -fall all}]
} -result {3.9269904048459794 10.210178126898237 16.493359669208044 22.776546417508598 29.059734040425376\
                   35.3429155371396 41.62610243078114 47.90928994793005}

test FindWhenTest-9 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec1 y1 -vec2 y2 -cross all}]
} -result {0.7853963717173225 3.9269904048459794 7.06858471936647 10.210178126898237 13.351769438547745\
                   16.493359669208044 19.634952339789507 22.776546417508598 25.91814071385083 29.059734040425376\
                   32.201325208292914 35.3429155371396 38.4845083117874 41.62610243078114 44.76769670562969\
                   47.90928994793005}

test FindWhenTest-10 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec1 y1 -vec2 y2 -fall 5 -from 1\
                                                                                          -to 30}]
} -result 29.059734040425376

test FindWhenTest-11 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec1 y1 -vec2 y2 -fall 5 -from 10\
                                                                                         -to 20}} errorStr
    return $errorStr
} -result {Cross between vectors with conditions 'fall 5 delay=0.000000 from=10.000000 to=20.000000' was not found}

test FindWhenTest-12 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2]\
            -when {-vec1 y1 -vec2 y2 -fall last -from 1 -to 30}]
} -result 29.059734040425376

test FindWhenTest-13 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1\
                    -when {-vec y2 -val 0.5 -fall last}]
} -result 0.8656753304879521

test FindWhenTest-14 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec1 y1 -vec2 y2 -fall last}]
} -result 47.90928994793005

test FindWhenTest-15 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when {-vec1 y1 -vec2 y2 -fall 2 -from 10\
                                                                                          -to 20}]
} -result 16.493359669208044

test FindWhenTest-16 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -when {-vec y2 -val 1 -fall 1}]
} -result 0.0

test FindWhenTest-17 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $xsym y1 $y1sym y2 $y2sym] -when {-vec1 y1 -vec2 y2 -fall 1\
                                                                                                   -from -5 -to 30}]
} -result -2.356196191479806

test FindWhenTest-18 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $xsym y1 $y1sym y2 $y2sym]\
                    -when {-vec y1 -val 0.71 -rise 1 -from -20 -to 30}]
} -result -18.059860150158045

test FindWhenTest-19 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $xsym y1 $y1sym y2 $y2sym] -find y2\
                    -when {-vec1 y1 -vec2 y2 -fall 1 -from -5 -to 30}]
} -result -0.7070108343424859

test FindWhenTest-20 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $xsym y1 $y1sym y2 $y2sym] -find y2\
                    -when {-vec y1 -val 0.71 -rise 1 -from -20 -to 30}]
} -result 0.7039206613685683

test FindWhenTest-21 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $xsym y1 $y1sym y2 $y2sym] -find y1\
                    -when {-vec y1 -val 0.71 -rise 1 -from -20 -to 30}]
} -result 0.7100000000000005

test FindWhenTest-22 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $xsym y1 $y1sym y2 $y2sym] -find y2\
                   -when {-vec1 y1 -vec2 y2 -fall 20 -from -5 -to 30}} errorStr
    return $errorStr
} -result {Cross between vectors with conditions 'fall 20 delay=0.000000 from=-5.000000 to=30.000000' was not found}

### DerivWhen tests
test DerivWhenTest-1 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y1 -when {-vec y2 -val 1 -cross 1}]
} -result 1.0008326043588514

test DerivWhenTest-2 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y1 -when {-vec y2 -val 1 -cross last}]
} -result 1.0008326043588514

test DerivWhenTest-3 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y1 -when {-vec1 y1 -vec2 y2 -fall 5}]
} -result -0.6961561896724078

test DerivWhenTest-4 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y2 -when {-vec y1 -val 0.1 -rise 2}]
} -result -0.09167619818982331

test DerivAtTest-5 {} -body {
    set xloc {0 1 2 3 4 5}
    set yloc {0 1 4 9 16 25}
    return [::tclmeasure::measure -xname x -data [dcreate x $xloc y1 $yloc] -deriv y1 -when {-vec y1 -val 24.9999 -rise 1}]
} -result 9.0 -cleanup {
    unset xloc yloc
}

test DerivAtTest-6 {} -body {
    set xloc {0 1 2 3 4 5}
    set yloc {0 1 4 9 16 25}
    return [::tclmeasure::measure -xname x -data [dcreate x $xloc y1 $yloc] -deriv y1 -when {-vec y1 -val 1 -rise 1}]
} -result 2.0 -cleanup {
    unset xloc yloc
}

### FindAt tests
test FindAtTest-1 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -at 5]
} -result -0.9589242746631385

test FindAtTest-2 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -at [@ $x end]]
} -result -0.26237485370392877

test FindAtTest-3 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -at [@ $x 0]]
} -result 0.0

test FindAtTest-4 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -at 5.81946]
} -result -0.44715116692919593

test FindAtTest-5 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find y1 -at 500} errorStr
    return $errorStr
} -result {Value of the vector at '500.000000' was not found}

### DerivAt tests
test DerivAtTest-1 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y1 -at 5]
} -result 0.2835440076591418

test DerivAtTest-2 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y1 -at [@ $x end]]
} -result 0.9657612676151004

test DerivAtTest-3 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y1 -at [@ $x 0]]
} -result 1.0008326043588514

test DerivAtTest-4 {} -body {
    return [::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv y1 -at 5.81946]
} -result 0.8967632314779559

test DerivAtTest-5 {} -body {
    set xloc {0 1 2 3 4 5}
    set yloc {0 1 4 9 16 25}
    return [::tclmeasure::measure -xname x -data [dcreate x $xloc y1 $yloc] -deriv y1 -at 0]
} -result 0.0 -cleanup {
    unset xloc yloc
}

test DerivAtTest-6 {} -body {
    set xloc {0 1 2 3 4 5}
    set yloc {0 1 4 9 16 25}
    return [::tclmeasure::measure -xname x -data [dcreate x $xloc y1 $yloc] -deriv y1 -at 1]
} -result 1.5 -cleanup {
    unset xloc yloc
}

test DerivAtTest-7 {} -body {
    set xloc {0 1 2 3 4 5}
    set yloc {0 1 4 9 16 25}
    return [::tclmeasure::measure -xname x -data [dcreate x $xloc y1 $yloc] -deriv y1 -at 5]
} -result 10.0 -cleanup {
    unset xloc yloc
}

test DerivAtTest-8 {} -body {
    set xloc {0 1 2 3 4 5}
    set yloc {0 1 4 9 16 25}
    return [::tclmeasure::measure -xname x -data [dcreate x $xloc y1 $yloc] -deriv y1 -at 4]
} -result 8.0 -cleanup {
    unset xloc yloc
}

### Check handling of wrong switches combinations
test CheckTest-1 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -at 5} errorStr
    return $errorStr
} -result {When -at switch is presented, -find switch or -deriv switch is required} -cleanup {
    unset errorStr
}

test CheckTest-2 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -find 5} errorStr
    return $errorStr
} -result {When -find switch is presented, -when switch or -at switch is required} -cleanup {
    unset errorStr
}

test CheckTest-3 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -when 5 -at 1} errorStr
    return $errorStr
} -result {when doesn't allow at} -cleanup {
    unset errorStr
}

test CheckTest-4 {} -body {
    catch {::tclmeasure::measure -xname x -data [dcreate x $x y1 $y1 y2 $y2] -deriv 5 -find 1} errorStr
    return $errorStr
} -result {find doesn't allow deriv} -cleanup {
    unset errorStr
}


cleanupTests
